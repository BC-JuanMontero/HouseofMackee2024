import requests

# Base URL and endpoint details
base_url = "https://cms.api.brightcove.com"
endpoint = "/v1/accounts/{account_id}/channels/{channel_name}/members/{affiliate_account_id}"

# Account details
account_id = "6415882360001"#master
access_token = "AL0LwJGBQ_G2yukFaYlybgec5YcPdYfTyVevaOpBIEKoUSZnmzCBX-hwK12SIO38wEChHzg3iYbZFdhRsADVxV8BEN6KjVL8llVWGZLvinSw5AzIFiFMFwEKsOfIHduJEncWX0dV3Zh6sqNDTchWrzVgjHoU5o_PHNR4bokXybaea0olb6LxlsWJmRTUE_tEVxBrfBu6JAjA35UoZYqwe836JsXnx4npH51UzfO33sgC_ejm8bys68fSAddA4f2HBTZ1FXOSQcIeyxKoXK5YxPdjmLVK-UF0ZOVB9_SE5P9fWLdDXwiqmCF5G5SHwRPZaVrM2HrI0Jb-BPbVvknmdsPPi5E8XvVyYD5dQf8tGK9Maor56eFxZI5RnmR6CLSM4UYGGHR-EJ95kPmASRzrdmf5_OCvQrAHjadF_p-a0YtjhA-HLt4JhGtRtLuPJhVsJ7ghFVV_GeKAlTo8ZJS56DDDx9Kc1gFD_30hD1_8MhHkfmOpwXD9KFBGBAL61mLH916ntqhJkKbCrbG8XlnhZrp1S8RZa3h16FSCDSH_o_UVc734Gdc0-AGb7qawCt78IGhY6dNtBwKLf-DRPYF8mf9wLHPEpShHBcWomlWc4yypneKqTSRi3AksK8Le6hXqV2WzQrcy3yDFOLyMAXjcJQTAdd1lBZBM8Hnq0iF7EhdaXQt_dZjuqPsJ65yOOdMhLoacp85ni8j5f_VtYZU4-Mj5Txcm6AYIwYgql0Ur5H_BxtPag1DG1vUxll6hwwo1QImU5j0Jf0NJkQzkkTwsxmFBS7pyyw0CcJ90pPUXpXaRnVfvwXXwqmhm0OJtprzwOQeGfOhh9lu7S__4FbsZygE2KnThb23VbYX9Uj2rbKsSOxNwwr3-gzK4UvyjjBzEZs67gI-z7L0W31jOz2A5YYNTlvih9jJtNELUq2aZO5Tx3hOKlTLMa5SPS326LiOSTj-xnPRd75dbpdke8-SLFdjY65IMc5LOWTU964oQ3AHHE94b1P9aVDGe_SMb49rle3PMr2JMWLI0nboEzslydnURZjHzDu0faD893am7Dq9NJvUJ86dOi2GKJDXwhstVvZZKOGSDxdScVydQElnepMpQtJyikQHReCrJNY-_gdp4xOIuxa0VBWRdPvDwQLcciL_GJHNeVPHLH2Tydz-xQGUi26fR8pm4I-FShyng2uKpLOUHRwcwa7GmQeXCllf8hNF4WciqJ-GV_dEDqEcXO7sgn5ADwJJ1vh0XSGcFMbh-M_9k_dTka7cRHGJRcbXQGC86Vp4xJTBXl9UrnIfyr6Iw0oYnEFXuHlLstxu-mM7_Hp1R_59ul7CQLghwKlo1gIeHBKJJefbz1ujT0NYPDU5t7inJpZsAAjTHdgJ_iPhD0hXOjAFm0N19oQNZ4vvvARJ8hb8UxPHr1tOPYCtQOIkPivE2GOES7PLE9WDjHes0fjPoMbaCIxJ-czt3bhUquLzkFZy4msfAcmPLEYD8tDIDhALQQxDDWqjfFQ8Z_PkP53MA-tHtzC_vjBJ83WYNU1IYipw3pjpU22NXSOSN7tquFznaljUGgIAesJwrS7yc6JAXx4b9e55BtbPGrnjm7c9eQHZTV60gM2nlKsUfa7PETlpPcb6dx7rhDCp2AiqFEWdkZunJoZtyRDvpgwUSiJoxb4x7wuWD--OnfF-SecibRn6BF9ohBLmghWbaDiEPM1HtzBaZcMy-sk5Z6yUoQ_LwZzgjItmj9Jt-013UvzVoEvkZbl9zJERZ6BVKIP0jwMBQXQoXVWRcXw9qZ8jPm-NhE0p-G_Z_3rqrdphdbhvypS28WaABnOKIsAwFuCqV2HPc1QFSBr-DwL4EUijxjPhM5QBGvAinqxLTkZa5zt8Z_lqIYUlEoMi3sFAj2hsqXFE_KaG3Rh-iawUFxEOxUoFwUOwYdO5-zT_jeX1S6KwVqxMBpR_XwF1DxOWChb7pGaX-TKz5W4JeZZBBoU89baQxcr8MkFzsKZlG65qbomEUfc1fLR3izYAsuRrRChdJIIslnjjM6a4JJAVjfgAXlS81afS0zxgtDBtzxiwNOKRpIeGe5fVTHYrqUeLw_F0PilFcMf-GsbERnTutDAy5QNrEArsJLFeVf4HsQNLB7pZCl2Kigz5MPBwB3uVV0_UmMWmbMlUOIU8Cb6UWH4Rb5egBmR7hUdmwWakw8GOhmjoY4i7_JPqYlLqbvrgZnZsfhF4aBeeaULwS8DdNN62r-kY1Vi7vEl90bfs3ljjeXtgI-DxRqvp2tGipxra2_qvb2wWQ4ujPlOtxfO3Ith82l4zUbfBKRrZCpG1fRRI0gh5f6yFJWJgO4wWNAAG7qYTeoEBep1hiMI4ISZT8V3ndOje966WHnDPmSH8ReDx1mxOiS1P30SczlCb2dEJ2KdMgqX1CZ15hquVoiyRImgu-VQa8xVmLpHQse8pjUFJ03dBJoKeAniLfxe7phP67ZdYh3kYUxSlKcfbZgR2EykhlkD17203QU0fQ7W2RSJ3w8drRthnm1-E3mpwKtJxYgZnRzW3SOackr_o1VgSl66BxrHCTh_eafwrLd3eSVtyIXKm_0PuJU4XiVZw5hYGBoiBpbJNQljzP5ql6NC3UG_Xl1xbh4Wk3GICGbdVqDfE6PZhJI4qu9FBR3topsy_B6-HCqXuog1n1ubgDOGK6MSSWdRNCxYaShZvns3O7P_i7OnRne_z8SZ-cVHmbkvhJf7s143suBwcoApSHvp_oMg6u-RQy39EYADurspsUso847qcCJAh8RnZTcC6dXLkkxR7CMOMoMl-TzVwsiXi9l2fG5pmgywAJYAX8mcMwVWDPSeAZzOS3PU243MAuYKGl7mOUYu8ov8XK2NOB3dh-88f1LX5co4Y3bXnGdzKoaKw7ylRTJcefGz4YY3MNbysnMxlw1RtXNiNfHH_zBrh_At3gpKNw16IAzr5Ml4ycim4eHW-nsWJ0tMWNwNZ12P_DYav9EAOBdjS1GlEitZOOJIjqahmYOywidvIBVnVzewaEt4-59IsENvpJyX3wkY4AHl8_JdzMqfX5Tv5DQQGxxUiFD4dxgjwaYDNYG1IZtmm6wSwzb9SHBMcHCZCCcWrldO0ypbx1qhcC8Tv1AtHPbv6kAfw6ldFBGVl4LZSDAQHFF_DcbWKMgy_jvLe1LOHmzQ4nJ54r7IU311jbqZc0u7Phni8LV2lME6HrCAzeae3szAvHVk2rBUFeOCej88bw37Uo7nl-Hq8y49Pdov754rzxC5EDuXbi6o7UFrok_gz2tkWvq3nGbZelkxWi1xbuWrcwVB8Z-mpWM-tUpnJav22OCvV1M3GfNi6yUJmHYM4MAjEGrB3ePRVRa7a62IacmaGxhn6WGuuG88EA-NbrZhOsVKjtte-tW7kEtaUqe5Te1kbuh1gN8smIFe0N7a22Wq8FNo1rR9-sDlk5pRMZX35Cf54tfkAthjYJuxNOWv3DAmjMlGEEFWiqM2td7mgX8Hw2P6egRsuhvthsNFo0ACPwjwx628GupsvDtZWLive9H9hIvMDruBUOZooOWeiMLs27oM6i7nPy4aEqNIg1Myk63FXTDdGXK-T4uMhoX61NbUC9eNvyKkdcClj0SDvkkMcSf-ASuA6LsSsobPDYIOlpwdRoosuL_t_jJesBG2hmv4jJpJ9A3lncyIfM6h7NNt4YV1tQQK0zM-bq1XAxG8LoGIDkXMNvx-lxPBSyMl8TkhT59uwiHRgquY0edlQxZcusOowYJ6s7KUjGglGBv230lOmL1PbmRsWjeXcSRKKb76pSMbLvWMhHwQ7kCcN5hCvTXCb3mSs1fekP3Qk2oSMH5G42poruHV1L3Wdfv1ChDhxZyVPcQQYU6SRyPLI6Ugrr9E2jGrxIu8_vNySjqOd5ilKTZuuq7lCJLfCU5hbtK50I5zq2B7oGp8XF9FbePBMDvZCmHOxvUYRW-TssUl2AWsEjWUMuwWoxq0IQ9JCB4UQCo7FTHgB8K_ib-z7o_xPxcebL5qW2lw5usbWlXB73ZvDUJ0LgXRBQquNaItaL3tXrIVQr7qkKSVLInu3RdsnkINCaDbSmveUJybiK7SJ_zVx2s8vj2TN9m0szgSWHfgvwq8JRjPArfvU8MoVc-m_bgiG4XxW63E-so8Q83IBETlBmYQvqQj8jn-5VwNikEa0LjoxvkcbZpypau1-ETFHLfAczFdwCIDtUb3_0PGh7bpmrNmYgRamQDKyMmj06YQLE0NbrIyY5_4pcnq8XMvYkp5sRHwjt1wm0LLclEleWmE-4_90eI6UPsfBsKOq0HgjMwrlWBqTy7OcHjO2wUeqi_A66iR-9BiQ3QHTllcobAtIJwrG6oqiNnT_R7aUhtH78FYfZhBJU_W_iBnDCX8HdlsNteNxb_8CkD4Npz37lYbDKMBNPU6Ga5O6N0aGFFHjZQG4_L4tYLyNcKG06Eg111PUBg-wupyVeouTcvZflaON9d1Y8vzc-qc7iQ-75C09SEbp-PAdOSEKR0vRKcKx1nWxO12kf4zuFqzw77cv8KdM2fyH4cJ5Ci7W1D5QxxTuv3rKdqVTbDk7dwno9l4dtjheRFmdzHmE3gc7yQoSEFbJZBqFDCkcDfORbDzRXa5W4dfxvU3-EAG4UnRqSXZ08T978wM_hJY6veqwBEX4yhdXGpE0r5-Pp37qt0Gl9akzlCklOGfKJsJYB3r11nrH7LQJyNdFmK5ziQlp3IIuD1DYAy43Otvdn6bOBnuEJ4QlcQVQIAfACRHn-7UtokfZyJmPh8IX3Ef8Y3TBJ71nat0ep67oSMordE4aF0MeLvdYyR2ixRSsrMnbMlDL3jXmmP-xlBFOBeMG0bKzkI5mdrJ8fZVnGiVoreST-8O9nM69fG-KP1VqINPdD3unXgQWsBM4JGuXizjqExZ0Mswg78E-5rVRHc1KTDLxEPQMEPYDJNy6JxUQ7l2huZt_AhDOfDRFKAXC4t4q5qT_JVAiZYCfZ5Ss9GqyIT9ED2WfDpySYedJzFnL3gpm-XgvVsUOT3T4umsH-_Jkr7HaQzVwR2EfwqajvvIecW-Kc1hto1MoT-l4PFtcaP0Ji-7f5qdeh7Tze-pKrYjjRptWfQejvMhCEGiOjtuyal5si5fHQkCtMhiOXLp5R2iGiF0TBaNndBj3Kw4nJmDsJvDKKN5MlRW9bQJAnCmYDDMCPfwW7Lf_9kzC16UH1yMsPOP9zP4iYAG_WaMNh6Ij-7DJUIN74DhOAKNmY4fD7k-x4EZM5ipjdUVBv6AEv2w" #token from postman

# Channel name (assuming it's the same for all requests)
channel_name = "default"

# List of affiliate account IDs
affiliate_accounts = [
   "6415892261001",
"6415892255001",
"6415892257001"
    # Add more affiliate account IDs as needed
]

# Function to send the request
def send_request(url, token, affiliate_account_id):
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    json_body={
        "account_id":affiliate_account_id
    }
    print(url)
    try:
        response = requests.put(url, headers=headers, json=json_body)
        if response.status_code == 200:
            print(f"Success: {response.json()}")
        else:
            print(f"Failed with status code: {response}")
    except Exception as e:
        print(f"Error occurred: {e}")

# Loop through each affiliate account ID and send the request
for affiliate_account_id in affiliate_accounts:
    # Construct the final URL for the current affiliate account
    url = f"{base_url}{endpoint}".format(account_id=account_id, channel_name=channel_name, affiliate_account_id=affiliate_account_id)
    
    # Send the request with the access token
    send_request(url, access_token,affiliate_account_id)
